/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 pc.glb -T -p 6
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export function Pc(props) {
  const { nodes, materials } = useGLTF("/models/pc-transformed.glb");

  for (const material of Object.values(materials)) {
    material.envMapIntensity = 0.5;
    material.roughness = 0.9;
  }

  return (
    <group
      {...props}
      dispose={null}
    >
      <group
        position={[1.242115, 0.683699, -0.189796]}
        rotation={[Math.PI, 0, Math.PI]}
      >
        <mesh
          geometry={nodes.Base_1.geometry}
          material={materials["Plastic Gloss White"]}
        />
        <mesh
          geometry={nodes.Base_2.geometry}
          material={materials["Brushed Steel"]}
        />
        <mesh
          geometry={nodes.Base_3.geometry}
          material={materials["Simple Black"]}
        />
        <mesh
          geometry={nodes.Base_4.geometry}
          material={materials["Metal Chrome Marked"]}
        />
        <mesh
          geometry={nodes.Base_5.geometry}
          material={materials.PlasticWhite}
        />
        <group
          position={[-0.004345, -0.002324, 0.291585]}
          rotation={[0.069992, 0, 0]}
        >
          <mesh
            geometry={nodes.Keyboard_1.geometry}
            material={materials["Brushed Steel"]}
          />
          <mesh
            geometry={nodes.Keyboard_2.geometry}
            material={materials["Playstic Keys"]}
          />
        </group>
        <group position={[0.307175, 0.023713, 0.167779]}>
          <mesh
            geometry={nodes.Mousey.geometry}
            material={materials["Brushed Steel"]}
          />
          <mesh
            geometry={nodes.Mousey_1.geometry}
            material={materials["Metal Chrome Marked"]}
          />
        </group>
        <mesh
          geometry={nodes.PC_Wire.geometry}
          material={materials["Fabric Small Weave"]}
          position={[-0.001467, 0.045843, -0.149978]}
          rotation={[-Math.PI, 1.471719, -Math.PI]}
          scale={-0.026408}
        />
        <group
          position={[-0.008556, 0.004392, 0.167264]}
          rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        >
          <mesh
            geometry={nodes.Pen_1.geometry}
            material={materials["Brushed Steel"]}
          />
          <mesh
            geometry={nodes.Pen_2.geometry}
            material={materials["Plastic Gloss White"]}
          />
          <mesh
            geometry={nodes.Pen_3.geometry}
            material={materials["Simple Black"]}
          />
        </group>
        <mesh
          geometry={nodes.Screen_Arms.geometry}
          material={materials["Metal Chrome Marked"]}
          position={[0.000088, 0.019064, -0.107058]}
          rotation={[0.056413, 0, 0]}
          scale={0.014945}
        >
          <group
            position={[-0.000012, 12.988595, 6.964095]}
            rotation={[-0.112826, 0, 0]}
            scale={[66.914268, 66.914261, 66.914261]}
          >
            <mesh
              geometry={nodes.Screen_1.geometry}
              material={materials["Brushed Steel"]}
            />
            <mesh
              geometry={nodes.Screen_2.geometry}
              material={materials["Simple Black"]}
            />
            <mesh
              geometry={nodes.Screen_3.geometry}
              material={materials["Material.003"]}
            />
          </group>
        </mesh>
        <group
          position={[-0.288686, 0.018852, 0.190668]}
          scale={[0.500849, 1, 0.500849]}
        >
          <mesh
            geometry={nodes.Twisty_Twisty_fun_thing_1.geometry}
            material={materials["Brushed Steel"]}
          />
          <mesh
            geometry={nodes.Twisty_Twisty_fun_thing_2.geometry}
            material={materials["Simple Black"]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/pc-transformed.glb");
